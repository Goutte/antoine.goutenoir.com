<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UnitTesting on Guttulous L∞ps</title>
    <link>https://antoine.goutenoir.com/blog/categories/unittesting/</link>
    <description>Recent content in UnitTesting on Guttulous L∞ps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 Dec 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://antoine.goutenoir.com/blog/categories/unittesting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python UnitTest : assertIsNan() and assertIsNotNan()</title>
      <link>https://antoine.goutenoir.com/blog/posts/2013-12-12-python-unittest-assertisnan-and-assertisnotnan/</link>
      <pubDate>Thu, 12 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://antoine.goutenoir.com/blog/posts/2013-12-12-python-unittest-assertisnan-and-assertisnotnan/</guid>
      <description>How do we assert that a value is nan (not a number) ?
We could do self.assertTrue(math.isnan(value)), but it will raise a TypeError if value is neither a float or a Real.
And when we want to assert that a value is not nan using self.assertFalse(math.isnan(value)), it is a problem.
It&amp;rsquo;s an interesting question actually : does &amp;ldquo;not nan&amp;rdquo; needs to be a number or just not nan ? It&amp;rsquo;s a matter of taste, I think.</description>
    </item>
    
  </channel>
</rss>
